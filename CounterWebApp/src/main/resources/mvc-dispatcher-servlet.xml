<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
        " default-lazy-init="false">

	<context:component-scan base-package="com.test.controller" />

	<aop:aspectj-autoproxy />

	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<bean id="testChild1" class="com.test.controller.ChilldClassForScopeObject"
		abstract="true">
		<property name="lastName1" value="value of last name1"></property>
		<property name="lastName2" value="value of last name2"></property>
	</bean>

<bean id="testChild3" class="com.test.controller.ChilldClassForScopeObject"
		parent="testChild1" init-method="springInit" destroy-method="springDestroy">
		<property name="lastName3" value="value of last name3"></property>
		<property name="lastName1" value="updated test1"></property>
		<property name="lastName2" value="updated test2"></property>
	</bean>
	<bean id="testChild4" class="com.test.controller.ChilldClassForScopeObject"
		parent="testChild1">
		<property name="lastName3" value="value of last name4"></property>
		<property name="lastName1" value="updated test4"></property>
		<property name="lastName2" value="updated test4"></property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${driverClass}</value>
		</property>
		<property name="url">
			<!-- <value>jdbc:oracle:thin:@B-F13-ITSSI.Yelladworks.in:1521:XE"</value> -->
			<value>${url}</value>
		</property>
		<property name="username">
			<value>${username}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
	</bean>

	<bean id="testService" class="com.test.controller.TestServiceImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="testService2" class="com.test.controller.TestServiceImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="parentClassForScopeObject" class="com.test.controller.ParentClassForScopeObject">
		<property name="stringValues">
			<list>
				<value>test1</value>
				<value>test2</value>
				<value>test2</value>
				<value>test4</value>
			</list>
		</property>
		<property name="childClassForScopeObject">
			<set>
				<ref bean="testChild3" />
				<ref bean="testChild4" />
			</set>
		</property>
	</bean>
	
	<bean id="testAutowireModes" class="com.test.controller.AutowireModes">
<!-- 	<constructor-arg index="0" ref="testChild3"> 
	</constructor-arg>
 --><!-- 	<property name="chilldClassForScopeObject" ref="testChild4"></property>
 -->	</bean>
	

	<bean id="testInjection" class="com.test.controller.TestEnumInjector">
		<constructor-arg index="0" type="java.util.Map">
			<map>
				<!-- <entry key="#{T(com.test.controller.TestEnum).TEST1}" value="value1 
					sfdsdffsd" /> -->
				<entry key="TEST2" value="value1 sfdsdffsd" />

				<!-- <entry> <key> <entry key="#{T(com.test.controller.TestEnum).TEST1}" 
					value="value1" /> <value type="com.test.controller.TestEnum">TEST1</value> 
					</key> <value type="java.lang.String">test1 value</value> </entry> -->
			</map>
		</constructor-arg>
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" autowire="default">
		<property name="location">
			<value>classpath:testproperties.properties</value>
		</property>
	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>hbm/Dept.hbm.xml</value>
				<value>hbm/Employee.hbm.xml</value>
				<value>hbm/Person.hbm.xml</value>
				<value>hbm/Thing.hbm.xml</value>

			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
<!-- 				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
 -->			</props>
		</property>
	</bean>
	
	<bean id="testDao" class="com.test.dao.TestDaoImpl">
	<property name="sessionFactory" ref="mySessionFactory"/>
	</bean>
	
	
	<!-- JPA Entity Manager configuration -->
		<bean id="mediaEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.jpa.entities" />
		<property name="dataSource" ref="dataSource"/>

 		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.OracleDialect" />
				<property name="showSql" value='true' />
			</bean>
		</property>
 		<property name="jpaProperties">
			<!-- set extra properties here, e.g. for Hibernate: -->
			<props>
				<!--  We disabled the Validation for temporary (if change Company_id data type in Sic table)  -->
				<!-- <prop key="hibernate.hbm2ddl.auto">${db.media.hibernate.hbm2ddl.auto}</prop> -->
				
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
                <!-- Added to mask bean relational constraint validation error -->
			</props>
		</property>
	</bean>
	
	<bean id="testDaoJpa" class="com.test.dao.JpaTestDaoImpl"/>
	
</beans>